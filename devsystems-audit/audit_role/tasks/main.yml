# tasks/main.yml
---
- name: List of old audit related files
  find:
    paths: "/tmp/"
    patterns: 'audit_*'
    use_regex: yes
    recurse: yes
    file_type: any
  register: old_files_dump

- name: Clean up temp folders & files
  file:
    path: '{{ item.path }}'
    state: absent
  with_items: '{{ old_files_dump.files}}'
  become: true
  no_log: true

- name: Ensure results directory on control node
  file:
    path: /tmp/audit_results
    state: directory
  delegate_to: localhost
  run_once: true

- name: Ensure audit_scripts directory exists in all hosts
  file:
    path: /tmp/audit_scripts/
    state: directory

- name: Copy audit_commands_list.txt to all hosts
  copy:
    src: "{{ role_path }}/files/audit_commands_list.txt"
    dest: "/tmp/audit_commands_list.txt"
  become: true

- name: Copy bash scripts to remote system
  copy:
    src: "{{ role_path }}/files/scripts/"
    dest: "/tmp/audit_scripts/"
    mode: a+x

- name: Read commands from audit_commands_list.txt on remote host
  slurp:
    src: /tmp/audit_commands_list.txt
  register: commands_file

- name: Set commands from file
  set_fact:
    commands: "{{ commands_file.content | b64decode | regex_findall('.+') | list }}"

# - name: Debugging Display role path
#   debug:
#     msg: "Role Path: {{ role_path }}"

- name: Define scripts to execute
  find:
    paths: "/tmp/audit_scripts/"
    patterns: '*.sh'
  register: scripts_dump

- name: Make scripts list
  set_fact:
    scripts: "{{ scripts_dump.files|map(attribute='path')|list }}"

# - name: Debugging Display scripts found
#   debug:
#     msg: "Scripts found: {{ scripts }}"

# Check if scripts variable is empty
- name: Fail if no scripts found
  fail:
    msg: "No scripts found in the directory!"
  when: scripts | length == 0

- name: Combine commands and scripts
  set_fact:
    commands_and_scripts: "{{ commands + scripts }}"

- name: Execute each command and script, and record status
  include_tasks: execute_command_script.yml
  loop: "{{ commands_and_scripts }}"
  loop_control:
    loop_var: item

- name: Find all command/script result files
  find:
    paths: /tmp/audit_results
    patterns: "*.json"
  register: result_files
  delegate_to: localhost
  run_once: true

- name: Load each result file content into results list
  slurp:
    src: "{{ item.path }}"
  register: slurped_files
  loop: "{{ result_files.files }}"
  loop_control:
    label: "{{ item.path }}"
  delegate_to: localhost
  run_once: true

- name: Set consolidated results variable from slurped files
  set_fact:
    results: "{{ results | default([]) + [item_json] }}"
  loop: "{{ slurped_files.results }}"
  vars:
    item_json: "{{ (item.content | b64decode) | from_json }}"
  delegate_to: localhost
  run_once: true
  no_log: true

- name: Generate CSV report (run once on control node)
  template:
    src: results.csv.j2
    dest: results.csv
  delegate_to: localhost
  run_once: true

- name: List of old audit related files
  find:
    paths: "/tmp/"
    patterns: 'audit_*'
    use_regex: yes
    recurse: yes
    file_type: any
  register: old_files_dump
  when: inventory_hostname != "localhost"

- name: Clean up temp folders & files
  file:
    path: '{{ item.path }}'
    state: absent
  with_items: '{{ old_files_dump.files }}'
  when: inventory_hostname != "localhost"
  become: true
  no_log: true